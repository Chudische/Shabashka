"""
Django settings for shabashka project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""


import os
from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Get variabels from enviroment
dotenv_path = os.path.join(BASE_DIR, '.env')
if os.path.exists(dotenv_path):
    load_dotenv(dotenv_path)

hosts = '/srv/host.env'
if os.path.exists(hosts):
        load_dotenv(hosts)

HOSTING_NAME = os.getenv('HOSTING_NAME')
HOSTING_NAME_S = os.getenv('HOSTING_NAME_S')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['shabashka.pp.ua', '127.0.0.1', '192.168.42.220', 'www.shabashka.pp.ua', 'localhost']

CORS_ORIGIN_ALLOW_ALL = True
CORS_URL_REGEX = r'^/api/.*$'

# Application definition

AUTH_USER_MODEL = 'main.ShaUser'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = os.getenv("GMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("GMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = True
SITE_ID = 1
INTERNAL_IPS = [
    '192.168.42.51',
    '192.168.42.50',
    '127.0.0.1',
]


INSTALLED_APPS = [
    'easy_thumbnails',
    'django_cleanup',
    'bootstrap4',
    'crispy_forms',
    'crispy_bootstrap4',
    'main.apps.MainConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'rest_framework',
    'corsheaders',
    'api.apps.ApiConfig',
    'social_django',
    'mapwidgets',
    'import_export',
    'extra_views',
    'debug_toolbar',
    'cookie_consent',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'social_core.backends.linkedin.LinkedinOAuth2',
    'social_core.backends.instagram.InstagramOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'shabashka.urls'



# Social app settings
LOGIN_URL = 'main:login'
LOGIN_REDIRECT_URL = 'main:profile'
LOGOUT_URL = 'main:logout'
LOGOUT_REDIRECT_URL = 'main:index'
SOCIAL_AUTH_URL_NAMESPACE = "main:social"

# Facebook settings
SOCIAL_AUTH_FACEBOOK_KEY = os.getenv("FB_KEY")
SOCIAL_AUTH_FACEBOOK_SECRET = os.getenv("FB_SECRET")
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
  'fields': 'id, name, email, picture.type(large)'
}
SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [
    ('name', 'name'),
    ('email', 'email'),
    ('picture', 'avatar'),
]

# GOOGLE Auth settings
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv("GG_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv("GG_SECRET")

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    # 'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    'main.pipeline.update_avatar'
)


# Gmap settings
GOOGLE_MAP_API_KEY = os.getenv("GG_MAP_KEY")
MAP_WIDGETS = {
    "GooglePointFieldWidget": (
        ("zoom", 15),
        ("mapCenterLocationName", "kiev"),
        ("GooglePlaceAutocompleteOptions", {'componentRestrictions': {'country': 'ua'}
        }),
        ("markerFitZoom", 12),
    ),
    "GOOGLE_MAP_API_KEY": GOOGLE_MAP_API_KEY,
    "LANGUAGE" : "ru"
    }



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "templates"),
            os.path.join(BASE_DIR, "static"),
            '../static/main/images/',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.middlewares.shabashka_context_processor',
                'main.middlewares.global_settings',                
            ],
        },
    },
]

WSGI_APPLICATION = 'shabashka.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'network': {
          'ENGINE': 'django.db.backends.postgresql',
          'NAME': os.getenv("DB_NAME"),
          'USER': os.getenv("DB_USER"),
          'PASSWORD': os.getenv("DB_PASSWORD"),
          'HOST': '127.0.0.1',
          'PORT': '5432',
    },
    'remote': {
          'ENGINE': 'django.db.backends.postgresql',
          'NAME': os.getenv("DB_NAME", ),
          'USER': os.getenv("DB_USER"),
          'PASSWORD': os.getenv("DB_PASSWORD"),
          'HOST': os.getenv("DB_IP"),
          'PORT': '5537',
    },
    'local': {
            'ENGINE': 'django.contrib.gis.db.backends.spatialite',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

default_database = os.environ.get("DJANGO_DATABASE", "network")
DATABASES['default'] = DATABASES[default_database]


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/



LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

THUMBNAIL_ALIASES = {
    '': {
        'default': {
            'size': (96, 96),
            'crop': 'scale',
        },
    },
}

THUMBNAIL_BASEDIR = 'thumbnails'

COOKIE_CONSENT_NAME = "cookie_consent"
COOKIE_CONSENT_MAX_AGE = 60 * 60 * 24 * 365 * 1  # 1 year
COOKIE_CONSENT_LOG_ENABLED = True
